defmodule IntegrationTest do
  use ExUnit.Case

  import AssertValue

  test "simple pass test" do
    actual = """
    aaa
    bbb
    """
    assert_value actual == """
    aaa
    bbb
    """
  end

  test "simple fail test" do
    actual = """
    aaa
    bbb
    ccc
    """
    assert_value actual == """
    aaa
    bBb
    ccc
    """
  end

  test "create expected" do
    value = """
    aaa
     bbb
      ccc
    """
    assert_value value == """
    aaa
     bbb
      ccc
    """
  end

  test "update expected" do
    actual = """
     3
     4
     5
    """
    assert_value actual == """
     3
     4
     5
    """
  end

  test "create expected from string" do
    assert_value "foo\nbar" == """
    foo
    bar
    """
  end

  test "create file" do
    actual = """
    aaa
    bbb
    ccc
    """
    assert_value actual == File.read!(Path.expand("file_to_create", __DIR__))
  end

  test "update file" do
    actual = """
    aaa
    bbb
    ccc
    """
    assert_value actual == File.read!(Path.expand("file_to_update", __DIR__))
  end

  test "create expected from function" do
    assert_value hello("World") == """
    Hello World!
    """
  end

  test "update expected from function" do
    assert_value hello("Elixir") == """
    Hello Elixir!
    """
  end

  defp hello(arg) do
    "Hello #{arg}!"
  end

end
